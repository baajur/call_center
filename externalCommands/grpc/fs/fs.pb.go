// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/fs.proto

/*
Package fs is a generated protocol buffer package.

It is generated from these files:
	protos/fs.proto

It has these top-level messages:
	ErrorExecute
	ExecuteRequest
	ExecuteResponse
	HangupRequest
	HangupResponse
	OriginateRequest
	OriginateResponse
	BridgeRequest
	BridgeResponse
*/
package fs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorExecute_Type int32

const (
	ErrorExecute_ERROR ErrorExecute_Type = 0
	ErrorExecute_USAGE ErrorExecute_Type = 1
)

var ErrorExecute_Type_name = map[int32]string{
	0: "ERROR",
	1: "USAGE",
}
var ErrorExecute_Type_value = map[string]int32{
	"ERROR": 0,
	"USAGE": 1,
}

func (x ErrorExecute_Type) String() string {
	return proto.EnumName(ErrorExecute_Type_name, int32(x))
}
func (ErrorExecute_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type OriginateRequest_Strategy int32

const (
	OriginateRequest_FAILOVER OriginateRequest_Strategy = 0
	OriginateRequest_MULTIPLE OriginateRequest_Strategy = 1
)

var OriginateRequest_Strategy_name = map[int32]string{
	0: "FAILOVER",
	1: "MULTIPLE",
}
var OriginateRequest_Strategy_value = map[string]int32{
	"FAILOVER": 0,
	"MULTIPLE": 1,
}

func (x OriginateRequest_Strategy) String() string {
	return proto.EnumName(OriginateRequest_Strategy_name, int32(x))
}
func (OriginateRequest_Strategy) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

type ErrorExecute struct {
	Message string            `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Type    ErrorExecute_Type `protobuf:"varint,2,opt,name=type,enum=fs.ErrorExecute_Type" json:"type,omitempty"`
}

func (m *ErrorExecute) Reset()                    { *m = ErrorExecute{} }
func (m *ErrorExecute) String() string            { return proto.CompactTextString(m) }
func (*ErrorExecute) ProtoMessage()               {}
func (*ErrorExecute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ErrorExecute) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorExecute) GetType() ErrorExecute_Type {
	if m != nil {
		return m.Type
	}
	return ErrorExecute_ERROR
}

type ExecuteRequest struct {
	Command string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	Args    string `protobuf:"bytes,2,opt,name=args" json:"args,omitempty"`
}

func (m *ExecuteRequest) Reset()                    { *m = ExecuteRequest{} }
func (m *ExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*ExecuteRequest) ProtoMessage()               {}
func (*ExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ExecuteRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *ExecuteRequest) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

type ExecuteResponse struct {
	Data  string        `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Error *ErrorExecute `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *ExecuteResponse) Reset()                    { *m = ExecuteResponse{} }
func (m *ExecuteResponse) String() string            { return proto.CompactTextString(m) }
func (*ExecuteResponse) ProtoMessage()               {}
func (*ExecuteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ExecuteResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *ExecuteResponse) GetError() *ErrorExecute {
	if m != nil {
		return m.Error
	}
	return nil
}

type HangupRequest struct {
	Uuid  string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Cause string `protobuf:"bytes,2,opt,name=cause" json:"cause,omitempty"`
}

func (m *HangupRequest) Reset()                    { *m = HangupRequest{} }
func (m *HangupRequest) String() string            { return proto.CompactTextString(m) }
func (*HangupRequest) ProtoMessage()               {}
func (*HangupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HangupRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *HangupRequest) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

type HangupResponse struct {
	Error *ErrorExecute `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *HangupResponse) Reset()                    { *m = HangupResponse{} }
func (m *HangupResponse) String() string            { return proto.CompactTextString(m) }
func (*HangupResponse) ProtoMessage()               {}
func (*HangupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HangupResponse) GetError() *ErrorExecute {
	if m != nil {
		return m.Error
	}
	return nil
}

type OriginateRequest struct {
	Variables    map[string]string             `protobuf:"bytes,1,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Endpoints    []string                      `protobuf:"bytes,2,rep,name=endpoints" json:"endpoints,omitempty"`
	Strategy     OriginateRequest_Strategy     `protobuf:"varint,3,opt,name=strategy,enum=fs.OriginateRequest_Strategy" json:"strategy,omitempty"`
	Destination  string                        `protobuf:"bytes,4,opt,name=destination" json:"destination,omitempty"`
	Timeout      int32                         `protobuf:"varint,5,opt,name=timeout" json:"timeout,omitempty"`
	CallerNumber string                        `protobuf:"bytes,6,opt,name=callerNumber" json:"callerNumber,omitempty"`
	CallerName   string                        `protobuf:"bytes,7,opt,name=callerName" json:"callerName,omitempty"`
	Context      string                        `protobuf:"bytes,8,opt,name=context" json:"context,omitempty"`
	Dialplan     string                        `protobuf:"bytes,9,opt,name=dialplan" json:"dialplan,omitempty"`
	Extensions   []*OriginateRequest_Extension `protobuf:"bytes,10,rep,name=extensions" json:"extensions,omitempty"`
}

func (m *OriginateRequest) Reset()                    { *m = OriginateRequest{} }
func (m *OriginateRequest) String() string            { return proto.CompactTextString(m) }
func (*OriginateRequest) ProtoMessage()               {}
func (*OriginateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OriginateRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *OriginateRequest) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *OriginateRequest) GetStrategy() OriginateRequest_Strategy {
	if m != nil {
		return m.Strategy
	}
	return OriginateRequest_FAILOVER
}

func (m *OriginateRequest) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *OriginateRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *OriginateRequest) GetCallerNumber() string {
	if m != nil {
		return m.CallerNumber
	}
	return ""
}

func (m *OriginateRequest) GetCallerName() string {
	if m != nil {
		return m.CallerName
	}
	return ""
}

func (m *OriginateRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *OriginateRequest) GetDialplan() string {
	if m != nil {
		return m.Dialplan
	}
	return ""
}

func (m *OriginateRequest) GetExtensions() []*OriginateRequest_Extension {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type OriginateRequest_Extension struct {
	AppName string `protobuf:"bytes,1,opt,name=appName" json:"appName,omitempty"`
	Args    string `protobuf:"bytes,2,opt,name=args" json:"args,omitempty"`
}

func (m *OriginateRequest_Extension) Reset()                    { *m = OriginateRequest_Extension{} }
func (m *OriginateRequest_Extension) String() string            { return proto.CompactTextString(m) }
func (*OriginateRequest_Extension) ProtoMessage()               {}
func (*OriginateRequest_Extension) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

func (m *OriginateRequest_Extension) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *OriginateRequest_Extension) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

type OriginateResponse struct {
	Uuid  string        `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Error *ErrorExecute `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *OriginateResponse) Reset()                    { *m = OriginateResponse{} }
func (m *OriginateResponse) String() string            { return proto.CompactTextString(m) }
func (*OriginateResponse) ProtoMessage()               {}
func (*OriginateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *OriginateResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OriginateResponse) GetError() *ErrorExecute {
	if m != nil {
		return m.Error
	}
	return nil
}

type BridgeRequest struct {
	LegAId        string `protobuf:"bytes,1,opt,name=leg_a_id,json=legAId" json:"leg_a_id,omitempty"`
	LegBId        string `protobuf:"bytes,2,opt,name=leg_b_id,json=legBId" json:"leg_b_id,omitempty"`
	LegBReserveId string `protobuf:"bytes,3,opt,name=leg_b_reserve_id,json=legBReserveId" json:"leg_b_reserve_id,omitempty"`
}

func (m *BridgeRequest) Reset()                    { *m = BridgeRequest{} }
func (m *BridgeRequest) String() string            { return proto.CompactTextString(m) }
func (*BridgeRequest) ProtoMessage()               {}
func (*BridgeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BridgeRequest) GetLegAId() string {
	if m != nil {
		return m.LegAId
	}
	return ""
}

func (m *BridgeRequest) GetLegBId() string {
	if m != nil {
		return m.LegBId
	}
	return ""
}

func (m *BridgeRequest) GetLegBReserveId() string {
	if m != nil {
		return m.LegBReserveId
	}
	return ""
}

type BridgeResponse struct {
	Uuid  string        `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Error *ErrorExecute `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *BridgeResponse) Reset()                    { *m = BridgeResponse{} }
func (m *BridgeResponse) String() string            { return proto.CompactTextString(m) }
func (*BridgeResponse) ProtoMessage()               {}
func (*BridgeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BridgeResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *BridgeResponse) GetError() *ErrorExecute {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*ErrorExecute)(nil), "fs.ErrorExecute")
	proto.RegisterType((*ExecuteRequest)(nil), "fs.ExecuteRequest")
	proto.RegisterType((*ExecuteResponse)(nil), "fs.ExecuteResponse")
	proto.RegisterType((*HangupRequest)(nil), "fs.HangupRequest")
	proto.RegisterType((*HangupResponse)(nil), "fs.HangupResponse")
	proto.RegisterType((*OriginateRequest)(nil), "fs.OriginateRequest")
	proto.RegisterType((*OriginateRequest_Extension)(nil), "fs.OriginateRequest.Extension")
	proto.RegisterType((*OriginateResponse)(nil), "fs.OriginateResponse")
	proto.RegisterType((*BridgeRequest)(nil), "fs.BridgeRequest")
	proto.RegisterType((*BridgeResponse)(nil), "fs.BridgeResponse")
	proto.RegisterEnum("fs.ErrorExecute_Type", ErrorExecute_Type_name, ErrorExecute_Type_value)
	proto.RegisterEnum("fs.OriginateRequest_Strategy", OriginateRequest_Strategy_name, OriginateRequest_Strategy_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Api service

type ApiClient interface {
	Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error)
	Hangup(ctx context.Context, in *HangupRequest, opts ...grpc.CallOption) (*HangupResponse, error)
	Originate(ctx context.Context, in *OriginateRequest, opts ...grpc.CallOption) (*OriginateResponse, error)
	Bridge(ctx context.Context, in *BridgeRequest, opts ...grpc.CallOption) (*BridgeResponse, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error) {
	out := new(ExecuteResponse)
	err := grpc.Invoke(ctx, "/fs.Api/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Hangup(ctx context.Context, in *HangupRequest, opts ...grpc.CallOption) (*HangupResponse, error) {
	out := new(HangupResponse)
	err := grpc.Invoke(ctx, "/fs.Api/Hangup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Originate(ctx context.Context, in *OriginateRequest, opts ...grpc.CallOption) (*OriginateResponse, error) {
	out := new(OriginateResponse)
	err := grpc.Invoke(ctx, "/fs.Api/Originate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Bridge(ctx context.Context, in *BridgeRequest, opts ...grpc.CallOption) (*BridgeResponse, error) {
	out := new(BridgeResponse)
	err := grpc.Invoke(ctx, "/fs.Api/Bridge", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Api service

type ApiServer interface {
	Execute(context.Context, *ExecuteRequest) (*ExecuteResponse, error)
	Hangup(context.Context, *HangupRequest) (*HangupResponse, error)
	Originate(context.Context, *OriginateRequest) (*OriginateResponse, error)
	Bridge(context.Context, *BridgeRequest) (*BridgeResponse, error)
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.Api/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Execute(ctx, req.(*ExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Hangup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HangupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Hangup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.Api/Hangup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Hangup(ctx, req.(*HangupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Originate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OriginateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Originate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.Api/Originate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Originate(ctx, req.(*OriginateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Bridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BridgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Bridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fs.Api/Bridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Bridge(ctx, req.(*BridgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fs.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _Api_Execute_Handler,
		},
		{
			MethodName: "Hangup",
			Handler:    _Api_Hangup_Handler,
		},
		{
			MethodName: "Originate",
			Handler:    _Api_Originate_Handler,
		},
		{
			MethodName: "Bridge",
			Handler:    _Api_Bridge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/fs.proto",
}

func init() { proto.RegisterFile("protos/fs.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 668 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdb, 0x6a, 0xdb, 0x4c,
	0x10, 0x8e, 0x7c, 0x8a, 0x35, 0x71, 0x1c, 0x67, 0xff, 0x04, 0x84, 0xc9, 0x1f, 0x8c, 0x0a, 0xa9,
	0x7b, 0xe3, 0x52, 0xb7, 0x17, 0x49, 0x28, 0x01, 0x07, 0xdc, 0xd6, 0xe0, 0xd4, 0x65, 0x73, 0xb8,
	0x0d, 0x6b, 0x6b, 0x22, 0x44, 0x65, 0x49, 0xd9, 0x5d, 0x85, 0xf8, 0x01, 0xfb, 0x18, 0x7d, 0x97,
	0xb2, 0xab, 0x83, 0xa5, 0xd4, 0x94, 0x42, 0xef, 0xe6, 0xf0, 0x7d, 0xfb, 0xcd, 0xce, 0xce, 0x2c,
	0xec, 0x45, 0x3c, 0x94, 0xa1, 0x78, 0xfb, 0x20, 0x06, 0xda, 0x22, 0x95, 0x07, 0x61, 0x3f, 0x42,
	0x6b, 0xcc, 0x79, 0xc8, 0xc7, 0xcf, 0xb8, 0x88, 0x25, 0x12, 0x0b, 0xb6, 0x97, 0x28, 0x04, 0x73,
	0xd1, 0x32, 0x7a, 0x46, 0xdf, 0xa4, 0x99, 0x4b, 0xde, 0x40, 0x4d, 0xae, 0x22, 0xb4, 0x2a, 0x3d,
	0xa3, 0xdf, 0x1e, 0x1e, 0x0e, 0x1e, 0xc4, 0xa0, 0xc8, 0x1c, 0xdc, 0xac, 0x22, 0xa4, 0x1a, 0x62,
	0x1f, 0x41, 0x4d, 0x79, 0xc4, 0x84, 0xfa, 0x98, 0xd2, 0x19, 0xed, 0x6c, 0x29, 0xf3, 0xf6, 0x7a,
	0xf4, 0x79, 0xdc, 0x31, 0xec, 0x0b, 0x68, 0xa7, 0x1c, 0x8a, 0x8f, 0x31, 0x0a, 0xa9, 0x44, 0x17,
	0xe1, 0x72, 0xc9, 0x02, 0x27, 0x13, 0x4d, 0x5d, 0x42, 0xa0, 0xc6, 0xb8, 0x2b, 0xb4, 0xa8, 0x49,
	0xb5, 0x6d, 0x5f, 0xc1, 0x5e, 0xce, 0x17, 0x51, 0x18, 0x08, 0x54, 0x30, 0x87, 0x49, 0x96, 0xb2,
	0xb5, 0x4d, 0x4e, 0xa0, 0x8e, 0xaa, 0x3e, 0xcd, 0xdd, 0x19, 0x76, 0x5e, 0x16, 0x4c, 0x93, 0xb4,
	0x7d, 0x06, 0xbb, 0x5f, 0x58, 0xe0, 0xc6, 0x51, 0x56, 0x0d, 0x81, 0x5a, 0x1c, 0x7b, 0x59, 0x29,
	0xda, 0x26, 0x07, 0x50, 0x5f, 0xb0, 0x58, 0x60, 0x5a, 0x48, 0xe2, 0xd8, 0xa7, 0xd0, 0xce, 0xa8,
	0x69, 0x21, 0xb9, 0xa8, 0xf1, 0x67, 0xd1, 0x1f, 0x35, 0xe8, 0xcc, 0xb8, 0xe7, 0x7a, 0x01, 0x5b,
	0xb7, 0x61, 0x04, 0xe6, 0x13, 0xe3, 0x1e, 0x9b, 0xfb, 0x28, 0x2c, 0xa3, 0x57, 0xed, 0xef, 0x0c,
	0x5f, 0xa9, 0x03, 0x5e, 0x02, 0x07, 0x77, 0x19, 0x6a, 0x1c, 0x48, 0xbe, 0xa2, 0x6b, 0x16, 0x39,
	0x02, 0x13, 0x03, 0x27, 0x0a, 0xbd, 0x40, 0xaa, 0xa6, 0x55, 0xfb, 0x26, 0x5d, 0x07, 0xc8, 0x19,
	0x34, 0x85, 0xe4, 0x4c, 0xa2, 0xbb, 0xb2, 0xaa, 0xfa, 0x19, 0xff, 0xdf, 0x78, 0xfe, 0x75, 0x0a,
	0xa2, 0x39, 0x9c, 0xf4, 0x60, 0xc7, 0x41, 0x21, 0x15, 0xcc, 0x0b, 0x03, 0xab, 0xa6, 0xdb, 0x50,
	0x0c, 0xa9, 0x47, 0x94, 0xde, 0x12, 0xc3, 0x58, 0x5a, 0xf5, 0x9e, 0xd1, 0xaf, 0xd3, 0xcc, 0x25,
	0x36, 0xb4, 0x16, 0xcc, 0xf7, 0x91, 0x7f, 0x8d, 0x97, 0x73, 0xe4, 0x56, 0x43, 0x93, 0x4b, 0x31,
	0x72, 0x0c, 0x90, 0xfa, 0x6c, 0x89, 0xd6, 0xb6, 0x46, 0x14, 0x22, 0xc9, 0x88, 0x04, 0x12, 0x9f,
	0xa5, 0xd5, 0xcc, 0x46, 0x44, 0xbb, 0xa4, 0x0b, 0x4d, 0xc7, 0x63, 0x7e, 0xe4, 0xb3, 0xc0, 0x32,
	0x75, 0x2a, 0xf7, 0xc9, 0x05, 0x00, 0x3e, 0x4b, 0x0c, 0x84, 0x17, 0x06, 0xc2, 0x02, 0xdd, 0xd2,
	0xe3, 0x8d, 0x57, 0x1e, 0x67, 0x30, 0x5a, 0x60, 0x74, 0xcf, 0xc0, 0xcc, 0x13, 0xaa, 0x04, 0x16,
	0x45, 0xba, 0xbe, 0x74, 0x4a, 0x53, 0x77, 0xd3, 0x94, 0x76, 0x3f, 0x42, 0xbb, 0xfc, 0x4c, 0xa4,
	0x03, 0xd5, 0xef, 0xb8, 0x4a, 0xb9, 0xca, 0x54, 0x53, 0xf5, 0xc4, 0xfc, 0x38, 0x9f, 0x2a, 0xed,
	0x9c, 0x57, 0x4e, 0x0d, 0xfb, 0x04, 0x9a, 0xd9, 0x23, 0x90, 0x16, 0x34, 0x3f, 0x8d, 0x26, 0xd3,
	0xd9, 0xdd, 0x58, 0x2d, 0x52, 0x0b, 0x9a, 0x57, 0xb7, 0xd3, 0x9b, 0xc9, 0xb7, 0xa9, 0xda, 0xa5,
	0x19, 0xec, 0x17, 0xae, 0xb2, 0xde, 0x86, 0xdf, 0x06, 0xf8, 0x6f, 0xb7, 0xc1, 0x87, 0xdd, 0x4b,
	0xee, 0x39, 0x6e, 0x61, 0x37, 0x9b, 0x3e, 0xba, 0xf7, 0xec, 0x3e, 0x3f, 0xb0, 0xe1, 0xa3, 0x3b,
	0x9a, 0x38, 0x59, 0x66, 0xae, 0x32, 0x95, 0x3c, 0x73, 0x39, 0x71, 0xc8, 0x6b, 0xe8, 0x24, 0x19,
	0x8e, 0x02, 0xf9, 0x13, 0x2a, 0x44, 0x55, 0x23, 0x76, 0x15, 0x82, 0x26, 0xd1, 0x89, 0x63, 0x4f,
	0xa1, 0x9d, 0xa9, 0xfd, 0x7b, 0xed, 0xc3, 0x9f, 0x06, 0x54, 0x47, 0x91, 0x47, 0x3e, 0xc0, 0x76,
	0xf6, 0x9d, 0x11, 0x8d, 0x2d, 0xfd, 0x36, 0xdd, 0xff, 0x4a, 0xb1, 0x44, 0xd7, 0xde, 0x22, 0xef,
	0xa0, 0x91, 0x2c, 0x33, 0xd9, 0x57, 0x80, 0xd2, 0x9f, 0xd0, 0x25, 0xc5, 0x50, 0x4e, 0x39, 0x07,
	0x33, 0xef, 0x3e, 0x39, 0xd8, 0x34, 0x57, 0xdd, 0xc3, 0x17, 0xd1, 0xa2, 0x5c, 0x72, 0xf5, 0x44,
	0xae, 0xd4, 0xf4, 0x44, 0xae, 0xdc, 0x19, 0x7b, 0x6b, 0xde, 0xd0, 0xdf, 0xf6, 0xfb, 0x5f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x4b, 0xb4, 0x6b, 0x7a, 0xc9, 0x05, 0x00, 0x00,
}
