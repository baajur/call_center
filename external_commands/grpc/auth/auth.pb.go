// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/auth.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	protos/auth.proto

It has these top-level messages:
	Session
	AccessScope
	VerifyTokenRequest
	Authorization
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Session struct {
	Uuid       string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Dc         int64  `protobuf:"varint,2,opt,name=dc" json:"dc,omitempty"`
	Domain     string `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
	UserId     int64  `protobuf:"varint,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Username   string `protobuf:"bytes,5,opt,name=username" json:"username,omitempty"`
	NetworkIp  string `protobuf:"bytes,6,opt,name=network_ip,json=networkIp" json:"network_ip,omitempty"`
	UserAgent  string `protobuf:"bytes,7,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	AccessedAt int64  `protobuf:"varint,10,opt,name=accessed_at,json=accessedAt" json:"accessed_at,omitempty"`
	CreatedAt  int64  `protobuf:"varint,11,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ExpiresAt  int64  `protobuf:"varint,12,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Session) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Session) GetDc() int64 {
	if m != nil {
		return m.Dc
	}
	return 0
}

func (m *Session) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Session) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Session) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Session) GetNetworkIp() string {
	if m != nil {
		return m.NetworkIp
	}
	return ""
}

func (m *Session) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Session) GetAccessedAt() int64 {
	if m != nil {
		return m.AccessedAt
	}
	return 0
}

func (m *Session) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Session) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

// AccessScope represents authorized access level
// to object class declaration within domain namespace
type AccessScope struct {
	// Inherit::ObjectClass
	Id     int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Class  string `protobuf:"bytes,2,opt,name=class" json:"class,omitempty"`
	Access uint32 `protobuf:"varint,3,opt,name=access" json:"access,omitempty"`
	// Is [?]-[b]ased [A]ccess [C]ontrol *model enabled ?
	Abac bool `protobuf:"varint,4,opt,name=abac" json:"abac,omitempty"`
	Obac bool `protobuf:"varint,5,opt,name=obac" json:"obac,omitempty"`
	Rbac bool `protobuf:"varint,6,opt,name=rbac" json:"rbac,omitempty"`
}

func (m *AccessScope) Reset()                    { *m = AccessScope{} }
func (m *AccessScope) String() string            { return proto.CompactTextString(m) }
func (*AccessScope) ProtoMessage()               {}
func (*AccessScope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccessScope) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AccessScope) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *AccessScope) GetAccess() uint32 {
	if m != nil {
		return m.Access
	}
	return 0
}

func (m *AccessScope) GetAbac() bool {
	if m != nil {
		return m.Abac
	}
	return false
}

func (m *AccessScope) GetObac() bool {
	if m != nil {
		return m.Obac
	}
	return false
}

func (m *AccessScope) GetRbac() bool {
	if m != nil {
		return m.Rbac
	}
	return false
}

type VerifyTokenRequest struct {
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *VerifyTokenRequest) Reset()                    { *m = VerifyTokenRequest{} }
func (m *VerifyTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*VerifyTokenRequest) ProtoMessage()               {}
func (*VerifyTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VerifyTokenRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

// Authorization. Current.
type Authorization struct {
	// current::authorization
	Dc       int64  `protobuf:"varint,1,opt,name=dc" json:"dc,omitempty"`
	Domain   string `protobuf:"bytes,2,opt,name=domain" json:"domain,omitempty"`
	RoleId   int64  `protobuf:"varint,3,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	// session::authorization (primary)
	Session *Session `protobuf:"bytes,5,opt,name=session" json:"session,omitempty"`
	// authorization::subject(s) whose privileges extends to the current role
	Roles map[string]int64 `protobuf:"bytes,6,rep,name=roles" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// MAC: set of access privileges assigned to current role::subject(s)
	Privs map[string]string `protobuf:"bytes,7,rep,name=privs" json:"privs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// DAC: set of object class(es) on which at least SELECT privilege is granted to current role::subject(s)
	Scope []*AccessScope `protobuf:"bytes,8,rep,name=scope" json:"scope,omitempty"`
}

func (m *Authorization) Reset()                    { *m = Authorization{} }
func (m *Authorization) String() string            { return proto.CompactTextString(m) }
func (*Authorization) ProtoMessage()               {}
func (*Authorization) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Authorization) GetDc() int64 {
	if m != nil {
		return m.Dc
	}
	return 0
}

func (m *Authorization) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Authorization) GetRoleId() int64 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *Authorization) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Authorization) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *Authorization) GetRoles() map[string]int64 {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Authorization) GetPrivs() map[string]string {
	if m != nil {
		return m.Privs
	}
	return nil
}

func (m *Authorization) GetScope() []*AccessScope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func init() {
	proto.RegisterType((*Session)(nil), "api.Session")
	proto.RegisterType((*AccessScope)(nil), "api.AccessScope")
	proto.RegisterType((*VerifyTokenRequest)(nil), "api.VerifyTokenRequest")
	proto.RegisterType((*Authorization)(nil), "api.Authorization")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SA service

type SAClient interface {
	Current(ctx context.Context, in *VerifyTokenRequest, opts ...grpc.CallOption) (*Authorization, error)
}

type sAClient struct {
	cc *grpc.ClientConn
}

func NewSAClient(cc *grpc.ClientConn) SAClient {
	return &sAClient{cc}
}

func (c *sAClient) Current(ctx context.Context, in *VerifyTokenRequest, opts ...grpc.CallOption) (*Authorization, error) {
	out := new(Authorization)
	err := grpc.Invoke(ctx, "/api.SA/Current", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SA service

type SAServer interface {
	Current(context.Context, *VerifyTokenRequest) (*Authorization, error)
}

func RegisterSAServer(s *grpc.Server, srv SAServer) {
	s.RegisterService(&_SA_serviceDesc, srv)
}

func _SA_Current_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SAServer).Current(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SA/Current",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SAServer).Current(ctx, req.(*VerifyTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.SA",
	HandlerType: (*SAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Current",
			Handler:    _SA_Current_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/auth.proto",
}

func init() { proto.RegisterFile("protos/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 507 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x65, 0x77, 0x9b, 0xdd, 0x64, 0x92, 0xa2, 0x62, 0x21, 0x6a, 0x45, 0xaa, 0x08, 0x39, 0x54,
	0x39, 0x05, 0x29, 0x3d, 0x10, 0x71, 0x40, 0x5a, 0x21, 0x0e, 0xbd, 0x21, 0x07, 0x71, 0x8d, 0xdc,
	0x5d, 0x43, 0xad, 0xa4, 0xeb, 0xc5, 0xf6, 0x16, 0xc2, 0x0f, 0xf0, 0x09, 0x48, 0x7c, 0x2d, 0x9a,
	0xb1, 0x4b, 0x20, 0x05, 0x71, 0x9b, 0x79, 0x6f, 0xde, 0xd8, 0xfb, 0x9e, 0x17, 0x1e, 0xb5, 0xd6,
	0x78, 0xe3, 0x9e, 0xcb, 0xce, 0x5f, 0xcf, 0xa9, 0x66, 0x99, 0x6c, 0xf5, 0xf4, 0x7b, 0x0a, 0xc5,
	0x4a, 0x39, 0xa7, 0x4d, 0xc3, 0x18, 0x1c, 0x75, 0x9d, 0xae, 0x79, 0x32, 0x49, 0x66, 0x03, 0x41,
	0x35, 0x7b, 0x08, 0x69, 0x5d, 0xf1, 0x74, 0x92, 0xcc, 0x32, 0x91, 0xd6, 0x15, 0x7b, 0x02, 0x79,
	0x6d, 0x6e, 0xa4, 0x6e, 0x78, 0x46, 0x53, 0xb1, 0x63, 0xa7, 0x50, 0x74, 0x4e, 0xd9, 0xb5, 0xae,
	0xf9, 0x11, 0x0d, 0xe7, 0xd8, 0x5e, 0xd6, 0x6c, 0x0c, 0x7d, 0xac, 0x1a, 0x79, 0xa3, 0x78, 0x8f,
	0x24, 0xbf, 0x7a, 0x76, 0x06, 0xd0, 0x28, 0xff, 0xd9, 0xd8, 0xcd, 0x5a, 0xb7, 0x3c, 0x27, 0x76,
	0x10, 0x91, 0xcb, 0x16, 0x69, 0xda, 0x29, 0x3f, 0xaa, 0xc6, 0xf3, 0x22, 0xd0, 0x88, 0x94, 0x08,
	0xb0, 0xa7, 0x30, 0x94, 0x55, 0xa5, 0x9c, 0x53, 0xf5, 0x5a, 0x7a, 0x0e, 0x74, 0x2c, 0xdc, 0x41,
	0xa5, 0x47, 0x7d, 0x65, 0x95, 0xf4, 0x81, 0x1f, 0x12, 0x3f, 0x88, 0x48, 0xa0, 0xd5, 0x97, 0x56,
	0x5b, 0xe5, 0x90, 0x1e, 0x05, 0x3a, 0x22, 0xa5, 0x9f, 0x7e, 0x4b, 0x60, 0x58, 0xd2, 0xb2, 0x55,
	0x65, 0x5a, 0x85, 0x4e, 0x44, 0x6f, 0x32, 0x91, 0xea, 0x9a, 0x3d, 0x86, 0x5e, 0xb5, 0x95, 0xce,
	0x91, 0x39, 0x03, 0x11, 0x1a, 0xf4, 0x27, 0xdc, 0x80, 0xfc, 0x39, 0x16, 0xb1, 0x43, 0x6f, 0xe5,
	0x95, 0xac, 0xc8, 0x9c, 0xbe, 0xa0, 0x1a, 0x31, 0x83, 0x58, 0x2f, 0x60, 0x26, 0x62, 0x16, 0xb1,
	0x3c, 0x60, 0x58, 0x4f, 0x5f, 0x00, 0x7b, 0xaf, 0xac, 0xfe, 0xb0, 0x7b, 0x67, 0x36, 0xaa, 0x11,
	0xea, 0x53, 0xa7, 0x9c, 0x67, 0xcf, 0x60, 0x14, 0x76, 0xaf, 0x3d, 0xc2, 0x31, 0xb5, 0x68, 0x09,
	0x4d, 0x4e, 0x7f, 0x64, 0x70, 0x5c, 0x76, 0xfe, 0xda, 0x58, 0xfd, 0x55, 0x7a, 0x8c, 0x38, 0xc4,
	0x99, 0xfc, 0x25, 0xce, 0xf4, 0x30, 0x4e, 0x6b, 0xb6, 0x0a, 0xe3, 0xcc, 0x42, 0x9c, 0xd8, 0x1e,
	0xc4, 0x79, 0x74, 0x10, 0xe7, 0x39, 0x14, 0x2e, 0x3c, 0x25, 0xfa, 0xa4, 0xe1, 0x62, 0x34, 0x97,
	0xad, 0x9e, 0xc7, 0xe7, 0x25, 0xee, 0x48, 0x76, 0x01, 0x3d, 0xdc, 0xe6, 0x78, 0x3e, 0xc9, 0x66,
	0xc3, 0xc5, 0x19, 0x4d, 0xfd, 0x71, 0xcf, 0xb9, 0x40, 0xfe, 0x4d, 0xe3, 0xed, 0x4e, 0x84, 0x59,
	0x14, 0xb5, 0x56, 0xdf, 0x3a, 0x5e, 0xfc, 0x53, 0xf4, 0x16, 0xf9, 0x28, 0xa2, 0x59, 0x76, 0x0e,
	0x3d, 0x87, 0xe1, 0xf1, 0x3e, 0x89, 0x4e, 0x82, 0x68, 0x1f, 0xaa, 0x08, 0xf4, 0x78, 0x09, 0xb0,
	0x3f, 0x91, 0x9d, 0x40, 0xb6, 0x51, 0xbb, 0x68, 0x28, 0x96, 0x98, 0xf5, 0xad, 0xdc, 0x76, 0x2a,
	0xfe, 0x08, 0xa1, 0x79, 0x99, 0x2e, 0x13, 0x54, 0xee, 0x8f, 0xfd, 0x9f, 0x72, 0xf0, 0x9b, 0x72,
	0xf1, 0x0a, 0xd2, 0x55, 0xc9, 0x96, 0x50, 0xbc, 0xee, 0xac, 0xc5, 0xf7, 0x7c, 0x4a, 0xb7, 0xbb,
	0x9f, 0xf4, 0x98, 0xdd, 0xff, 0xd6, 0xe9, 0x83, 0xab, 0x9c, 0xfe, 0xe2, 0x8b, 0x9f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xaf, 0x47, 0x4e, 0x95, 0xda, 0x03, 0x00, 0x00,
}
